{"version":3,"sources":[" [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterable] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:es6/util/inherits] ","../../node_modules/dom-utils/lib/matches.js","../../node_modules/dom-utils/lib/parents.js","../../node_modules/dom-utils/lib/delegate.js","../../node_modules/dom-utils/lib/closest.js","../../node_modules/autotrack/lib/plugins/event-tracker.js","../../node_modules/dom-utils/lib/get-attributes.js","../../node_modules/dom-utils/lib/parse-url.js","../../node_modules/autotrack/lib/method-chain.js","../../node_modules/autotrack/lib/utilities.js","../../node_modules/autotrack/lib/plugins/max-scroll-tracker.js","../../node_modules/autotrack/lib/provide.js","../../node_modules/autotrack/lib/constants.js","../../node_modules/autotrack/lib/usage.js","../../node_modules/autotrack/lib/plugins/clean-url-tracker.js","../../node_modules/autotrack/lib/plugins/outbound-form-tracker.js","../../node_modules/autotrack/lib/plugins/outbound-link-tracker.js","../../node_modules/autotrack/lib/event-emitter.js","../../node_modules/autotrack/lib/store.js","../../node_modules/autotrack/lib/session.js","../../node_modules/autotrack/lib/plugins/url-change-tracker.js"],"names":["$jscomp.defineProperty","$jscomp.global","$jscomp.initSymbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","proto","window","Element","prototype","nativeMatches","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","element","test","nodeType","i","item","selector","call","nodes","parentNode","querySelectorAll","node","parents","list","push","delegate","eventType","callback","listener","event","delegateTarget","opts","composed","composedPath","target","parentElements","concat","parent","document","useCapture","ancestor","addEventListener","destroy","removeEventListener","getAttributes","attrs","map","attributes","length","attr","name","value","DEFAULT_PORT","a","createElement","cache","parseUrl","url","location","href","charAt","port","HTTP_PORT","HTTPS_PORT","host","replace","hash","hostname","origin","protocol","pathname","search","instances","constructor","MethodChain","context","methodName","originalMethodReference","isTask","get","methodChain","boundMethodChain","wrappedMethod","this.wrappedMethod","lastBoundMethod","$jscomp.arrayFromIterable","args","set","add","overrideMethod","rebindMethodChain","remove","index","indexOf","splice","method","previousMethod","bind","getOrCreateMethodChain","filter","h","createFieldsObj","defaultFields","userFields","tracker","hitFilter","originalBuildHitTask","buildHitTask","model","assign","getAttributeFields","prefix","attributeFields","Object","keys","forEach","attribute","field","camelCase","slice","debounce","fn","timeout","clearTimeout","setTimeout","wait","withTimeout","called","len","sources","source","key","hasOwnProperty","str","match","p1","toUpperCase","uuid","b","toString","Math","random","provide","pluginName","pluginConstructor","gaAlias","GoogleAnalyticsObject","q","gaDevIds","DEV_ID","gaplugins","plugins","CLEAN_URL_TRACKER","EVENT_TRACKER","IMPRESSION_TRACKER","MEDIA_QUERY_TRACKER","OUTBOUND_FORM_TRACKER","OUTBOUND_LINK_TRACKER","PAGE_VISIBILITY_TRACKER","SOCIAL_WIDGET_TRACKER","URL_CHANGE_TRACKER","MAX_SCROLL_TRACKER","PLUGIN_COUNT","trackUsage","plugin","VERSION","usageHex","parseInt","toAdd","usageBin","substr","CleanUrlTracker","defaultOpts","queryDimension","stripQuery","queryDimensionIndex","trackerGetOverride","buildHitTaskOverride","methodOverride","originalMethod","fieldsObj","page","cleanUrlFields","cleanedFieldsObj","indexFilename","parts","split","join","trailingSlash","isFilename","stripNonWhitelistedQueryParams","NULL_DIMENSION","urlFieldsFilter","userCleanedFieldsObj","returnValue","searchString","Array","isArray","queryParamsWhitelist","foundParams","kv","$jscomp.makeIterator","EventTracker","events","attributePrefix","handleEvents","delegates","getAttribute","type","send","hitType","transport","OutboundFormTracker","formSelector","shouldTrackOutboundForm","handleFormSubmits","form","eventCategory","eventAction","eventLabel","action","navigator","sendBeacon","preventDefault","hitCallback","submit","parseUrlFn","OutboundLinkTracker","linkSelector","shouldTrackOutboundLink","handleLinkInteractions","link","metaKey","ctrlKey","shiftKey","altKey","which","clickHandler","defaultPrevented","oldHitCallback","EventEmitter","registry_","emit","getRegistry_","isListening","browserSupportsLocalStorage","Store","defaults","key_","defaults_","cache_","$jscomp.inherits","getOrCreate","trackingId","namespace","AUTOTRACK_PREFIX","storageListener","isSupported_","localStorage","setItem","removeItem","err","Store.isSupported_","parse","getItem","newData","JSON","stringify","clear","store","oldData","oldValue","newValue","data","Session","timeZone","Session.DEFAULT_TIMEOUT","sendHitTaskOverride","dateTimeFormatter","Intl","DateTimeFormat","Store.getOrCreate","defaultProps","hitTime","isExpired","id","getId","sessionData","oldHitTime","currentDate","Date","oldHitDate","MINUTES","datesAreDifferentInTimezone","format","sessionControl","sessionWillStart","sessionWillEnd","MaxScrollTracker","increaseThreshold","sessionTimeout","pagePath","getPagePath","handleScroll","trackerSetOverride","session","listenForMaxScrollChanges","getMaxScrollPercentageForCurrentPage","html","documentElement","body","scrollPercentage","min","max","round","pageYOffset","pageHeight","offsetHeight","scrollHeight","innerHeight","sessionId","maxScrollPercentage","stopListeningForMaxScrollChanges","increaseAmount","setMaxScrollPercentageForCurrentPage","eventValue","String","nonInteraction","sendMaxScrollEvent","maxScrollMetricIndex","fields","lastPagePath","UrlChangeTracker","history","pushState","shouldTrackUrlChange","trackReplaceState","path","pushStateOverride","replaceStateOverride","handlePopState","handleUrlChange","historyDidUpdate","oldPath","newPath","title"],"mappings":"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","file":"","sourcesContent":[null,null,null,null,null,null,null,"const proto = window.Element.prototype;\nconst nativeMatches = proto.matches ||\n      proto.matchesSelector ||\n      proto.webkitMatchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector;\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test ||\n          matchesSelector(element, /** @type {string} */ (test));\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (let i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  const nodes = element.parentNode.querySelectorAll(selector);\n  for (let i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport default function parents(element) {\n  const list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */ (element.parentNode);\n    list.push(element);\n  }\n  return list;\n}\n","import closest from './closest';\nimport matches from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport default function delegate(\n    ancestor, eventType, selector, callback, opts = {}) {\n  // Defines the event listener.\n  const listener = function(event) {\n    let delegateTarget;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      const composedPath = event.composedPath();\n      for (let i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    },\n  };\n}\n","import matches from './matches';\nimport parents from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf = false) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n  const parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (let i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, getAttributeFields} from '../utilities';\n\n\n/**\n * Class for the `eventTracker` analytics.js plugin.\n * @implements {EventTrackerPublicInterface}\n */\nclass EventTracker {\n  /**\n   * Registers declarative event tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?EventTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.EVENT_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {EventTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {EventTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleEvents = this.handleEvents.bind(this);\n\n    const selector = '[' + this.opts.attributePrefix + 'on]';\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, selector,\n          this.handleEvents, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all events on elements with event attributes.\n   * @param {Event} event The DOM click event.\n   * @param {Element} element The delegated DOM element target.\n   */\n  handleEvents(event, element) {\n    const prefix = this.opts.attributePrefix;\n    const events = element.getAttribute(prefix + 'on').split(/\\s*,\\s*/);\n\n    // Ensures the type matches one of the events specified on the element.\n    if (events.indexOf(event.type) < 0) return;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {transport: 'beacon'};\n    const attributeFields = getAttributeFields(element, prefix);\n    const userFields = assign({}, this.opts.fieldsObj, attributeFields);\n    const hitType = attributeFields.hitType || 'event';\n\n    this.tracker.send(hitType, createFieldsObj(defaultFields,\n        userFields, this.tracker, this.opts.hitFilter, element, event));\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('eventTracker', EventTracker);\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  const map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (let i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n","const HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nconst a = document.createElement('a');\nconst cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\n\nconst instances = [];\n\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\nexport default class MethodChain {\n  /**\n   * Adds the passed override method to the list of method chain overrides.\n   * @param {!Object} context The object containing the method to chain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to add.\n   */\n  static add(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).add(methodOverride);\n  }\n\n  /**\n   * Removes a method chain added via `add()`. If the override is the\n   * only override added, the original method is restored.\n   * @param {!Object} context The object containing the method to unchain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to remove.\n   */\n  static remove(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).remove(methodOverride);\n  }\n\n  /**\n   * Wraps a foreign object method and overrides it. Also stores a reference\n   * to the original method so it can be restored later.\n   * @param {!Object} context The object containing the method.\n   * @param {string} methodName The name of the method on the object.\n   */\n  constructor(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ?\n        context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = (...args) => {\n      const lastBoundMethod =\n          this.boundMethodChain[this.boundMethodChain.length - 1];\n\n      return lastBoundMethod(...args);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n  add(overrideMethod) {\n    this.methodChain.push(overrideMethod);\n    this.rebindMethodChain();\n  }\n\n  /**\n   * Removes a method from the method chain and restores the prior order.\n   * @param {!Function} overrideMethod The override method to remove.\n   */\n  remove(overrideMethod) {\n    const index = this.methodChain.indexOf(overrideMethod);\n    if (index > -1) {\n      this.methodChain.splice(index, 1);\n      if (this.methodChain.length > 0) {\n        this.rebindMethodChain();\n      } else {\n        this.destroy();\n      }\n    }\n  }\n\n  /**\n   * Loops through the method chain array and recreates the bound method\n   * chain array. This is necessary any time a method is added or removed\n   * to ensure proper original method context and order.\n   */\n  rebindMethodChain() {\n    this.boundMethodChain = [];\n    for (let method, i = 0; method = this.methodChain[i]; i++) {\n      const previousMethod = this.boundMethodChain[i - 1] ||\n          this.originalMethodReference.bind(this.context);\n      this.boundMethodChain.push(method(previousMethod));\n    }\n  }\n\n  /**\n   * Calls super and destroys the instance if no registered handlers remain.\n   */\n  destroy() {\n    const index = instances.indexOf(this);\n    if (index > -1) {\n      instances.splice(index, 1);\n      if (this.isTask) {\n        this.context.set(this.methodName, this.originalMethodReference);\n      } else {\n        this.context[this.methodName] = this.originalMethodReference;\n      }\n    }\n  }\n}\n\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\nfunction getOrCreateMethodChain(context, methodName) {\n  let methodChain = instances\n      .filter((h) => h.context == context && h.methodName == methodName)[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {getAttributes} from 'dom-utils';\nimport MethodChain from './method-chain';\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @param {(Event|TwttrEvent)=} event If the hit originated via a DOM event,\n *     hitFilter is invoked with that event as the third argument.\n * @return {!FieldsObj} The final fields object.\n */\nexport function createFieldsObj(\n    defaultFields, userFields, tracker = undefined,\n    hitFilter = undefined, target = undefined, event = undefined) {\n  if (typeof hitFilter == 'function') {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: (/** @type {!Model} */ model) => {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target, event);\n        originalBuildHitTask(model);\n      },\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nexport function getAttributeFields(element, prefix) {\n  const attributes = getAttributes(element);\n  const attributeFields = {};\n\n  Object.keys(attributes).forEach(function(attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      let value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      const field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nexport function debounce(fn, wait) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), wait);\n  };\n}\n\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nexport function withTimeout(callback, wait = 2000) {\n  let called = false;\n  const fn = function() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n// Maps trackers to queue by tracking ID.\nconst queueMap = {};\n\n/**\n * Queues a function for execution in the next call stack, or immediately\n * before any send commands are executed on the tracker. This allows\n * autotrack plugins to defer running commands until after all other plugins\n * are required but before any other hits are sent.\n * @param {!Tracker} tracker\n * @param {!Function} fn\n */\nexport function deferUntilPluginsLoaded(tracker, fn) {\n  const trackingId = tracker.get('trackingId');\n  const ref = queueMap[trackingId] = queueMap[trackingId] || {};\n\n  const processQueue = () => {\n    clearTimeout(ref.timeout);\n    if (ref.send) {\n      MethodChain.remove(tracker, 'send', ref.send);\n    }\n    delete queueMap[trackingId];\n\n    ref.queue.forEach((fn) => fn());\n  };\n\n  clearTimeout(ref.timeout);\n  ref.timeout = setTimeout(processQueue, 0);\n  ref.queue = ref.queue || [];\n  ref.queue.push(fn);\n\n  if (!ref.send) {\n    ref.send = (originalMethod) => {\n      return (...args) => {\n        processQueue();\n        originalMethod(...args);\n      };\n    };\n    MethodChain.add(tracker, 'send', ref.send);\n  }\n}\n\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...?Object} sources Additional objects who properties should be\n *     assigned to target. Non-objects are converted to objects.\n * @return {!Object} The modified target object.\n */\nexport const assign = Object.assign || function(target, ...sources) {\n  for (let i = 0, len = sources.length; i < len; i++) {\n    const source = Object(sources[i]);\n    for (let key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nexport function camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nexport function isObject(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n\n/**\n * @return {number} The current date timestamp\n */\nexport function now() {\n  return +new Date();\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nexport const uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, debounce, isObject} from '../utilities';\n\n\n/**\n * Class for the `maxScrollQueryTracker` analytics.js plugin.\n * @implements {MaxScrollTrackerPublicInterface}\n */\nclass MaxScrollTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MAX_SCROLL_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {MaxScrollTrackerOpts} */\n    const defaultOpts = {\n      increaseThreshold: 20,\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // maxScrollMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {MaxScrollTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n    this.pagePath = this.getPagePath();\n\n    // Binds methods to `this`.\n    this.handleScroll = debounce(this.handleScroll.bind(this), 500);\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'plugins/max-scroll-tracker');\n\n    // Creates the session and binds session events.\n    this.session = Session.getOrCreate(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    this.listenForMaxScrollChanges();\n  }\n\n\n  /**\n   * Adds a scroll event listener if the max scroll percentage for the\n   * current page isn't already at 100%.\n   */\n  listenForMaxScrollChanges() {\n    const maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n    if (maxScrollPercentage < 100) {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }\n\n\n  /**\n   * Removes an added scroll listener.\n   */\n  stopListeningForMaxScrollChanges() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n\n  /**\n   * Handles the scroll event. If the current scroll percentage is greater\n   * that the stored scroll event by at least the specified increase threshold,\n   * send an event with the increase amount.\n   */\n  handleScroll() {\n    const pageHeight = getPageHeight();\n    const scrollPos = window.pageYOffset; // scrollY isn't supported in IE.\n    const windowHeight = window.innerHeight;\n\n    // Ensure scrollPercentage is an integer between 0 and 100.\n    const scrollPercentage = Math.min(100, Math.max(0,\n        Math.round(100 * (scrollPos / (pageHeight - windowHeight)))));\n\n    // If the max scroll data gets out of the sync with the session data\n    // (for whatever reason), clear it.\n    const sessionId = this.session.getId();\n    if (sessionId != this.store.get().sessionId) {\n      this.store.clear();\n      this.store.set({sessionId});\n    }\n\n    // If the session has expired, clear the stored data and don't send any\n    // events (since they'd start a new session). Note: this check is needed,\n    // in addition to the above check, to handle cases where the session IDs\n    // got out of sync, but the session didn't expire.\n    if (this.session.isExpired(this.store.get().sessionId)) {\n      this.store.clear();\n    } else {\n      const maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n\n      if (scrollPercentage > maxScrollPercentage) {\n        if (scrollPercentage == 100 || maxScrollPercentage == 100) {\n          this.stopListeningForMaxScrollChanges();\n        }\n        const increaseAmount = scrollPercentage - maxScrollPercentage;\n        if (scrollPercentage == 100 ||\n            increaseAmount >= this.opts.increaseThreshold) {\n          this.setMaxScrollPercentageForCurrentPage(scrollPercentage);\n          this.sendMaxScrollEvent(increaseAmount, scrollPercentage);\n        }\n      }\n    }\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function((Object|string), (string|undefined))} originalMethod\n   *     A reference to the overridden method.\n   * @return {function((Object|string), (string|undefined))}\n   */\n  trackerSetOverride(originalMethod) {\n    return (field, value) => {\n      originalMethod(field, value);\n\n      /** @type {!FieldsObj} */\n      const fields = isObject(field) ? field : {[field]: value};\n      if (fields.page) {\n        const lastPagePath = this.pagePath;\n        this.pagePath = this.getPagePath();\n\n        if (this.pagePath != lastPagePath) {\n          // Since event listeners for the same function are never added twice,\n          // we don't need to worry about whether we're already listening. We\n          // can just add the event listener again.\n          this.listenForMaxScrollChanges();\n        }\n      }\n    };\n  }\n\n  /**\n   * Sends an event for the increased max scroll percentage amount.\n   * @param {number} increaseAmount\n   * @param {number} scrollPercentage\n   */\n  sendMaxScrollEvent(increaseAmount, scrollPercentage) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Max Scroll',\n      eventAction: 'increase',\n      eventValue: increaseAmount,\n      eventLabel: String(scrollPercentage),\n      nonInteraction: true,\n    };\n\n    // If a custom metric was specified, set it equal to the event value.\n    if (this.opts.maxScrollMetricIndex) {\n      defaultFields['metric' + this.opts.maxScrollMetricIndex] = increaseAmount;\n    }\n\n    this.tracker.send('event',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Stores the current max scroll percentage for the current page.\n   * @param {number} maxScrollPercentage\n   */\n  setMaxScrollPercentageForCurrentPage(maxScrollPercentage) {\n    this.store.set({\n      [this.pagePath]: maxScrollPercentage,\n      sessionId: this.session.getId(),\n    });\n  }\n\n  /**\n   * Gets the stored max scroll percentage for the current page.\n   * @return {number}\n   */\n  getMaxScrollPercentageForCurrentPage() {\n    return this.store.get()[this.pagePath] || 0;\n  }\n\n  /**\n   * Gets the page path from the tracker object.\n   * @return {number}\n   */\n  getPagePath() {\n    const url = parseUrl(\n        this.tracker.get('page') || this.tracker.get('location'));\n    return url.pathname + url.search;\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.session.destroy();\n    this.stopListeningForMaxScrollChanges();\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n  }\n}\n\n\nprovide('maxScrollTracker', MaxScrollTracker);\n\n\n/**\n * Gets the maximum height of the page including scrollable area.\n * @return {number}\n */\nfunction getPageHeight() {\n  const html = document.documentElement;\n  const body = document.body;\n  return Math.max(html.offsetHeight, html.scrollHeight,\n      body.offsetHeight, body.scrollHeight);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {DEV_ID} from './constants';\nimport {capitalize} from './utilities';\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nexport default function provide(pluginName, pluginConstructor) {\n  const gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function(...args) {\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(DEV_ID) < 0) {\n    window.gaDevIds.push(DEV_ID);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[capitalize(pluginName)] = pluginConstructor;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport const VERSION = '2.4.1';\nexport const DEV_ID = 'i5iSjo';\n\nexport const VERSION_PARAM = '_av';\nexport const USAGE_PARAM = '_au';\n\nexport const NULL_DIMENSION = '(not set)';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {USAGE_PARAM, VERSION, VERSION_PARAM} from './constants';\n\n\nexport const plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10,\n};\n\n\nconst PLUGIN_COUNT = Object.keys(plugins).length;\n\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nexport function trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    let toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  const usageHex = tracker.get('&' + USAGE_PARAM);\n  let usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + VERSION_PARAM, VERSION);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign} from '../utilities';\n\n\n/**\n * Class for the `cleanUrlTracker` analytics.js plugin.\n * @implements {CleanUrlTrackerPublicInterface}\n */\nclass CleanUrlTracker {\n  /**\n   * Registers clean URL tracking on a tracker object. The clean URL tracker\n   * removes query parameters from the page value reported to Google Analytics.\n   * It also helps to prevent tracking similar URLs, e.g. sometimes ending a\n   * URL with a slash and sometimes not.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?CleanUrlTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.CLEAN_URL_TRACKER);\n\n    /** @type {CleanUrlTrackerOpts} */\n    const defaultOpts = {\n      // stripQuery: undefined,\n      // queryParamsWhitelist: undefined,\n      // queryDimensionIndex: undefined,\n      // indexFilename: undefined,\n      // trailingSlash: undefined,\n      // urlFilter: undefined,\n    };\n    this.opts = /** @type {CleanUrlTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    /** @type {string|null} */\n    this.queryDimension = this.opts.stripQuery &&\n        this.opts.queryDimensionIndex ?\n            `dimension${this.opts.queryDimensionIndex}` : null;\n\n    // Binds methods to `this`.\n    this.trackerGetOverride = this.trackerGetOverride.bind(this);\n    this.buildHitTaskOverride = this.buildHitTaskOverride.bind(this);\n\n    // Override built-in tracker method to watch for changes.\n    MethodChain.add(tracker, 'get', this.trackerGetOverride);\n    MethodChain.add(tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n\n  /**\n   * Ensures reads of the tracker object by other plugins always see the\n   * \"cleaned\" versions of all URL fields.\n   * @param {function(string):*} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(string):*}\n   */\n  trackerGetOverride(originalMethod) {\n    return (field) => {\n      if (field == 'page' || field == this.queryDimension) {\n        const fieldsObj = /** @type {!FieldsObj} */ ({\n          location: originalMethod('location'),\n          page: originalMethod('page'),\n        });\n        const cleanedFieldsObj = this.cleanUrlFields(fieldsObj);\n        return cleanedFieldsObj[field];\n      } else {\n        return originalMethod(field);\n      }\n    };\n  }\n\n  /**\n   * Cleans URL fields passed in a send command.\n   * @param {function(!Model)} originalMethod A reference to the\n   *     overridden method.\n   * @return {function(!Model)}\n   */\n  buildHitTaskOverride(originalMethod) {\n    return (model) => {\n      const cleanedFieldsObj = this.cleanUrlFields({\n        location: model.get('location'),\n        page: model.get('page'),\n      });\n      model.set(cleanedFieldsObj, null, true);\n      originalMethod(model);\n    };\n  }\n\n  /**\n   * Accepts of fields object containing URL fields and returns a new\n   * fields object with the URLs \"cleaned\" according to the tracker options.\n   * @param {!FieldsObj} fieldsObj\n   * @return {!FieldsObj}\n   */\n  cleanUrlFields(fieldsObj) {\n    const url = parseUrl(\n        /** @type {string} */ (fieldsObj.page || fieldsObj.location));\n\n    let pathname = url.pathname;\n\n    // If an index filename was provided, remove it if it appears at the end\n    // of the URL.\n    if (this.opts.indexFilename) {\n      const parts = pathname.split('/');\n      if (this.opts.indexFilename == parts[parts.length - 1]) {\n        parts[parts.length - 1] = '';\n        pathname = parts.join('/');\n      }\n    }\n\n    // Ensure the URL ends with or doesn't end with slash based on the\n    // `trailingSlash` option. Note that filename URLs should never contain\n    // a trailing slash.\n    if (this.opts.trailingSlash == 'remove') {\n        pathname = pathname.replace(/\\/+$/, '');\n    } else if (this.opts.trailingSlash == 'add') {\n      const isFilename = /\\.\\w+$/.test(pathname);\n      if (!isFilename && pathname.substr(-1) != '/') {\n        pathname = pathname + '/';\n      }\n    }\n\n    /** @type {!FieldsObj} */\n    const cleanedFieldsObj = {\n      page: pathname + (this.opts.stripQuery ?\n          this.stripNonWhitelistedQueryParams(url.search) : url.search),\n    };\n    if (fieldsObj.location) {\n      cleanedFieldsObj.location = fieldsObj.location;\n    }\n    if (this.queryDimension) {\n      cleanedFieldsObj[this.queryDimension] =\n          url.search.slice(1) || NULL_DIMENSION;\n    }\n\n    // Apply the `urlFieldsFilter()` option if passed.\n    if (typeof this.opts.urlFieldsFilter == 'function') {\n      /** @type {!FieldsObj} */\n      const userCleanedFieldsObj =\n          this.opts.urlFieldsFilter(cleanedFieldsObj, parseUrl);\n\n      // Ensure only the URL fields are returned.\n      const returnValue = {\n        page: userCleanedFieldsObj.page,\n        location: userCleanedFieldsObj.location,\n      };\n      if (this.queryDimension) {\n        returnValue[this.queryDimension] =\n            userCleanedFieldsObj[this.queryDimension];\n      }\n      return returnValue;\n    } else {\n      return cleanedFieldsObj;\n    }\n  }\n\n  /**\n   * Accpets a raw URL search string and returns a new search string containing\n   * only the site search params (if they exist).\n   * @param {string} searchString The URL search string (starting with '?').\n   * @return {string} The query string\n   */\n  stripNonWhitelistedQueryParams(searchString) {\n    if (Array.isArray(this.opts.queryParamsWhitelist)) {\n      const foundParams = [];\n      searchString.slice(1).split('&').forEach((kv) => {\n        const [key, value] = kv.split('=');\n        if (this.opts.queryParamsWhitelist.indexOf(key) > -1 && value) {\n          foundParams.push([key, value]);\n        }\n      });\n\n      return foundParams.length ?\n          '?' + foundParams.map((kv) => kv.join('=')).join('&') : '';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Restores all overridden tasks and methods.\n   */\n  remove() {\n    MethodChain.remove(this.tracker, 'get', this.trackerGetOverride);\n    MethodChain.remove(this.tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n}\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate, parseUrl} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        getAttributeFields, withTimeout} from '../utilities';\n\n\n/**\n * Class for the `outboundFormTracker` analytics.js plugin.\n * @implements {OutboundFormTrackerPublicInterface}\n */\nclass OutboundFormTracker {\n  /**\n   * Registers outbound form tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.OUTBOUND_FORM_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundFormTrackerOpts} */\n    const defaultOpts = {\n      formSelector: 'form',\n      shouldTrackOutboundForm: this.shouldTrackOutboundForm,\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {OutboundFormTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    this.delegate = delegate(document, 'submit', this.opts.formSelector,\n        this.handleFormSubmits.bind(this), {composed: true, useCapture: true});\n  }\n\n  /**\n   * Handles all submits on form elements. A form submit is considered outbound\n   * if its action attribute starts with http and does not contain\n   * location.hostname.\n   * When the beacon transport method is not available, the event's default\n   * action is prevented and re-emitted after the hit is sent.\n   * @param {Event} event The DOM submit event.\n   * @param {Element} form The delegated event target.\n   */\n  handleFormSubmits(event, form) {\n    const action = parseUrl(form.action).href;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Form',\n      eventAction: 'submit',\n      eventLabel: action,\n    };\n\n    if (this.opts.shouldTrackOutboundForm(form, parseUrl)) {\n      if (!navigator.sendBeacon) {\n        // Stops the submit and waits until the hit is complete (with timeout)\n        // for browsers that don't support beacon.\n        event.preventDefault();\n        defaultFields.hitCallback = withTimeout(function() {\n          form.submit();\n        });\n      }\n\n      const userFields = assign({}, this.opts.fieldsObj,\n          getAttributeFields(form, this.opts.attributePrefix));\n\n      this.tracker.send('event', createFieldsObj(\n          defaultFields, userFields,\n              this.tracker, this.opts.hitFilter, form, event));\n    }\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit when a form is\n   * submitted. By default, forms with an action attribute that starts with\n   * \"http\" and doesn't contain the current hostname are tracked.\n   * @param {Element} form The form that was submitted.\n   * @param {Function} parseUrlFn A cross-browser utility method for url\n   *     parsing (note: renamed to disambiguate when compiling).\n   * @return {boolean} Whether or not the form should be tracked.\n   */\n  shouldTrackOutboundForm(form, parseUrlFn) {\n    const url = parseUrlFn(form.action);\n    return url.hostname != location.hostname &&\n        url.protocol.slice(0, 4) == 'http';\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    this.delegate.destroy();\n  }\n}\n\n\nprovide('outboundFormTracker', OutboundFormTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate, parseUrl} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        getAttributeFields, withTimeout} from '../utilities';\n\n\n/**\n * Class for the `outboundLinkTracker` analytics.js plugin.\n * @implements {OutboundLinkTrackerPublicInterface}\n */\nclass OutboundLinkTracker {\n  /**\n   * Registers outbound link tracking on a tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.OUTBOUND_LINK_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundLinkTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      linkSelector: 'a, area',\n      shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {OutboundLinkTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n          this.handleLinkInteractions, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all interactions on link elements. A link is considered an outbound\n   * link if its hostname property does not match location.hostname. When the\n   * beacon transport method is not available, the links target is set to\n   * \"_blank\" to ensure the hit can be sent.\n   * @param {Event} event The DOM click event.\n   * @param {Element} link The delegated event target.\n   */\n  handleLinkInteractions(event, link) {\n    if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n      const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n      const url = parseUrl(href);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Outbound Link',\n        eventAction: event.type,\n        eventLabel: url.href,\n      };\n\n      /** @type {FieldsObj} */\n      const userFields = assign({}, this.opts.fieldsObj,\n          getAttributeFields(link, this.opts.attributePrefix));\n\n      const fieldsObj = createFieldsObj(defaultFields, userFields,\n          this.tracker, this.opts.hitFilter, link, event);\n\n      if (!navigator.sendBeacon &&\n          linkClickWillUnloadCurrentPage(event, link)) {\n        // Adds a new event handler at the last minute to minimize the chances\n        // that another event handler for this click will run after this logic.\n        const clickHandler = () => {\n          window.removeEventListener('click', clickHandler);\n\n          // Checks to make sure another event handler hasn't already prevented\n          // the default action. If it has the custom redirect isn't needed.\n          if (!event.defaultPrevented) {\n            // Stops the click and waits until the hit is complete (with\n            // timeout) for browsers that don't support beacon.\n            event.preventDefault();\n\n            const oldHitCallback = fieldsObj.hitCallback;\n            fieldsObj.hitCallback = withTimeout(function() {\n              if (typeof oldHitCallback == 'function') oldHitCallback();\n              location.href = href;\n            });\n          }\n          this.tracker.send('event', fieldsObj);\n        };\n        window.addEventListener('click', clickHandler);\n      } else {\n        this.tracker.send('event', fieldsObj);\n      }\n    }\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit when a link is\n   * clicked. By default links with a hostname property not equal to the current\n   * hostname are tracked.\n   * @param {Element} link The link that was clicked on.\n   * @param {Function} parseUrlFn A cross-browser utility method for url\n   *     parsing (note: renamed to disambiguate when compiling).\n   * @return {boolean} Whether or not the link should be tracked.\n   */\n  shouldTrackOutboundLink(link, parseUrlFn) {\n    const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n    const url = parseUrlFn(href);\n    return url.hostname != location.hostname &&\n        url.protocol.slice(0, 4) == 'http';\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n\n/**\n * Determines if a link click event will cause the current page to upload.\n * Note: most link clicks *will* cause the current page to unload because they\n * initiate a page navigation. The most common reason a link click won't cause\n * the page to unload is if the clicked was to open the link in a new tab.\n * @param {Event} event The DOM event.\n * @param {Element} link The link element clicked on.\n * @return {boolean} True if the current page will be unloaded.\n */\nfunction linkClickWillUnloadCurrentPage(event, link) {\n  return !(\n      // The event type can be customized; we only care about clicks here.\n      event.type != 'click' ||\n      // Links with target=\"_blank\" set will open in a new window/tab.\n      link.target == '_blank' ||\n      // On mac, command clicking will open a link in a new tab. Control\n      // clicking does this on windows.\n      event.metaKey || event.ctrlKey ||\n      // Shift clicking in Chrome/Firefox opens the link in a new window\n      // In Safari it adds the URL to a favorites list.\n      event.shiftKey ||\n      // On Mac, clicking with the option key is used to download a resouce.\n      event.altKey ||\n      // Middle mouse button clicks (which == 2) are used to open a link\n      // in a new tab, and right clicks (which == 3) on Firefox trigger\n      // a click event.\n      event.which > 1);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * An simple reimplementation of the native Node.js EventEmitter class.\n * The goal of this implementation is to be as small as possible.\n */\nexport default class EventEmitter {\n  /**\n   * Creates the event registry.\n   */\n  constructor() {\n    this.registry_ = {};\n  }\n\n  /**\n   * Adds a handler function to the registry for the passed event.\n   * @param {string} event The event name.\n   * @param {!Function} fn The handler to be invoked when the passed\n   *     event is emitted.\n   */\n  on(event, fn) {\n    this.getRegistry_(event).push(fn);\n  }\n\n  /**\n   * Removes a handler function from the registry for the passed event.\n   * @param {string=} event The event name.\n   * @param {Function=} fn The handler to be removed.\n   */\n  off(event = undefined, fn = undefined) {\n    if (event && fn) {\n      const eventRegistry = this.getRegistry_(event);\n      const handlerIndex = eventRegistry.indexOf(fn);\n      if (handlerIndex > -1) {\n        eventRegistry.splice(handlerIndex, 1);\n      }\n    } else {\n      this.registry_ = {};\n    }\n  }\n\n  /**\n   * Runs all registered handlers for the passed event with the optional args.\n   * @param {string} event The event name.\n   * @param {...*} args The arguments to be passed to the handler.\n   */\n  emit(event, ...args) {\n    this.getRegistry_(event).forEach((fn) => fn(...args));\n  }\n\n  /**\n   * Returns the total number of event handlers currently registered.\n   * @return {number}\n   */\n  getEventCount() {\n    let eventCount = 0;\n    Object.keys(this.registry_).forEach((event) => {\n      eventCount += this.getRegistry_(event).length;\n    });\n    return eventCount;\n  }\n\n  /**\n   * Returns an array of handlers associated with the passed event name.\n   * If no handlers have been registered, an empty array is returned.\n   * @private\n   * @param {string} event The event name.\n   * @return {!Array} An array of handler functions.\n   */\n  getRegistry_(event) {\n    return this.registry_[event] = (this.registry_[event] || []);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport EventEmitter from './event-emitter';\nimport {assign} from './utilities';\n\n\nconst AUTOTRACK_PREFIX = 'autotrack';\nconst instances = {};\nlet isListening = false;\n\n\n/** @type {boolean|undefined} */\nlet browserSupportsLocalStorage;\n\n\n/**\n * A storage object to simplify interacting with localStorage.\n */\nexport default class Store extends EventEmitter {\n  /**\n   * Gets an existing instance for the passed arguements or creates a new\n   * instance if one doesn't exist.\n   * @param {string} trackingId The tracking ID for the GA property.\n   * @param {string} namespace A namespace unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   * @return {Store} The Store instance.\n   */\n  static getOrCreate(trackingId, namespace, defaults) {\n    const key = [AUTOTRACK_PREFIX, trackingId, namespace].join(':');\n\n    // Don't create multiple instances for the same tracking Id and namespace.\n    if (!instances[key]) {\n      instances[key] = new Store(key, defaults);\n      if (!isListening) initStorageListener();\n    }\n    return instances[key];\n  }\n\n  /**\n   * Returns true if the browser supports and can successfully write to\n   * localStorage. The results is cached so this method can be invoked many\n   * times with no extra performance cost.\n   * @private\n   * @return {boolean}\n   */\n  static isSupported_() {\n    if (browserSupportsLocalStorage != null) {\n      return browserSupportsLocalStorage;\n    }\n\n    try {\n      window.localStorage.setItem(AUTOTRACK_PREFIX, AUTOTRACK_PREFIX);\n      window.localStorage.removeItem(AUTOTRACK_PREFIX);\n      browserSupportsLocalStorage = true;\n    } catch (err) {\n      browserSupportsLocalStorage = false;\n    }\n    return browserSupportsLocalStorage;\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   * @return {string|null} The stored value.\n   */\n  static get_(key) {\n    return window.localStorage.getItem(key);\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   * @param {string} value The value to store.\n   */\n  static set_(key, value) {\n    window.localStorage.setItem(key, value);\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   */\n  static clear_(key) {\n    window.localStorage.removeItem(key);\n  }\n\n  /**\n   * @param {string} key A key unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   */\n  constructor(key, defaults = {}) {\n    super();\n    this.key_ = key;\n    this.defaults_ = defaults;\n\n    /** @type {?Object} */\n    this.cache_ = null; // Will be set after the first get.\n  }\n\n  /**\n   * Gets the data stored in localStorage for this store. If the cache is\n   * already populated, return it as is (since it's always kept up-to-date\n   * and in sync with activity in other windows via the `storage` event).\n   * TODO(philipwalton): Implement schema migrations if/when a new\n   * schema version is introduced.\n   * @return {!Object} The stored data merged with the defaults.\n   */\n  get() {\n    if (this.cache_) {\n      return this.cache_;\n    } else {\n      if (Store.isSupported_()) {\n        try {\n          this.cache_ = parse(Store.get_(this.key_));\n        } catch(err) {\n          // Do nothing.\n        }\n      }\n      return this.cache_ = assign({}, this.defaults_, this.cache_);\n    }\n  }\n\n  /**\n   * Saves the passed data object to localStorage,\n   * merging it with the existing data.\n   * @param {Object} newData The data to save.\n   */\n  set(newData) {\n    this.cache_ = assign({}, this.defaults_, this.cache_, newData);\n\n    if (Store.isSupported_()) {\n      try {\n        Store.set_(this.key_, JSON.stringify(this.cache_));\n      } catch(err) {\n        // Do nothing.\n      }\n    }\n  }\n\n  /**\n   * Clears the data in localStorage for the current store.\n   */\n  clear() {\n    this.cache_ = {};\n    if (Store.isSupported_()) {\n      try {\n        Store.clear_(this.key_);\n      } catch(err) {\n        // Do nothing.\n      }\n    }\n  }\n\n  /**\n   * Removes the store instance for the global instances map. If this is the\n   * last store instance, the storage listener is also removed.\n   * Note: this does not erase the stored data. Use `clear()` for that.\n   */\n  destroy() {\n    delete instances[this.key_];\n    if (!Object.keys(instances).length) {\n      removeStorageListener();\n    }\n  }\n}\n\n\n/**\n * Adds a single storage event listener and flips the global `isListening`\n * flag so multiple events aren't added.\n */\nfunction initStorageListener() {\n  window.addEventListener('storage', storageListener);\n  isListening = true;\n}\n\n\n/**\n * Removes the storage event listener and flips the global `isListening`\n * flag so it can be re-added later.\n */\nfunction removeStorageListener() {\n  window.removeEventListener('storage', storageListener);\n  isListening = false;\n}\n\n\n/**\n * The global storage event listener.\n * @param {!Event} event The DOM event.\n */\nfunction storageListener(event) {\n  const store = instances[event.key];\n  if (store) {\n    const oldData = assign({}, store.defaults_, parse(event.oldValue));\n    const newData = assign({}, store.defaults_, parse(event.newValue));\n\n    store.cache_ = newData;\n    store.emit('externalSet', newData, oldData);\n  }\n}\n\n\n/**\n * Parses a source string as JSON\n * @param {string|null} source\n * @return {!Object} The JSON object.\n */\nfunction parse(source) {\n  let data = {};\n  if (source) {\n    try {\n      data = /** @type {!Object} */ (JSON.parse(source));\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n  return data;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport MethodChain from './method-chain';\nimport Store from './store';\nimport {now, uuid} from './utilities';\n\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n\nconst instances = {};\n\n\n/**\n * A session management class that helps track session boundaries\n * across multiple open tabs/windows.\n */\nexport default class Session {\n  /**\n   * Gets an existing instance for the passed arguments or creates a new\n   * instance if one doesn't exist.\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   * @return {Session} The Session instance.\n   */\n  static getOrCreate(tracker, timeout, timeZone) {\n    // Don't create multiple instances for the same property.\n    const trackingId = tracker.get('trackingId');\n    if (instances[trackingId]) {\n      return instances[trackingId];\n    } else {\n      return instances[trackingId] = new Session(tracker, timeout, timeZone);\n    }\n  }\n\n  /**\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   */\n  constructor(tracker, timeout, timeZone) {\n    this.tracker = tracker;\n    this.timeout = timeout || Session.DEFAULT_TIMEOUT;\n    this.timeZone = timeZone;\n\n    // Binds methods.\n    this.sendHitTaskOverride = this.sendHitTaskOverride.bind(this);\n\n    // Overrides into the trackers sendHitTask method.\n    MethodChain.add(tracker, 'sendHitTask', this.sendHitTaskOverride);\n\n    // Some browser doesn't support various features of the\n    // `Intl.DateTimeFormat` API, so we have to try/catch it. Consequently,\n    // this allows us to assume the presence of `this.dateTimeFormatter` means\n    // it works in the current browser.\n    try {\n      this.dateTimeFormatter =\n          new Intl.DateTimeFormat('en-US', {timeZone: this.timeZone});\n    } catch(err) {\n      // Do nothing.\n    }\n\n    /** @type {SessionStoreData} */\n    const defaultProps = {\n      hitTime: 0,\n      isExpired: false,\n    };\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'session', defaultProps);\n\n    // Ensure the session has an ID.\n    if (!this.store.get().id) {\n      this.store.set(/** @type {SessionStoreData} */ ({id: uuid()}));\n    }\n  }\n\n  /**\n   * Returns the ID of the current session.\n   * @return {string}\n   */\n  getId() {\n    return this.store.get().id;\n  }\n\n  /**\n   * Accepts a session ID and returns true if the specified session has\n   * evidentially expired. A session can expire for two reasons:\n   *   - More than 30 minutes has elapsed since the previous hit\n   *     was sent (The 30 minutes number is the Google Analytics default, but\n   *     it can be modified in GA admin \"Session settings\").\n   *   - A new day has started since the previous hit, in the\n   *     specified time zone (should correspond to the time zone of the\n   *     property's views).\n   *\n   * Note: since real session boundaries are determined at processing time,\n   * this is just a best guess rather than a source of truth.\n   *\n   * @param {string} id The ID of a session to check for expiry.\n   * @return {boolean} True if the session has not exp\n   */\n  isExpired(id = this.getId()) {\n    // If a session ID is passed and it doesn't match the current ID,\n    // assume it's from an expired session. If no ID is passed, assume the ID\n    // of the current session.\n    if (id != this.getId()) return true;\n\n    /** @type {SessionStoreData} */\n    const sessionData = this.store.get();\n\n    // `isExpired` will be `true` if the sessionControl field was set to\n    // 'end' on the previous hit.\n    if (sessionData.isExpired) return true;\n\n    const oldHitTime = sessionData.hitTime;\n\n    // Only consider a session expired if previous hit time data exists, and\n    // the previous hit time is greater than that session timeout period or\n    // the hits occurred on different days in the session timezone.\n    if (oldHitTime) {\n      const currentDate = new Date();\n      const oldHitDate = new Date(oldHitTime);\n      if (currentDate - oldHitDate > (this.timeout * MINUTES) ||\n          this.datesAreDifferentInTimezone(currentDate, oldHitDate)) {\n        return true;\n      }\n    }\n\n    // For all other cases return false.\n    return false;\n  }\n\n  /**\n   * Returns true if (and only if) the timezone date formatting is supported\n   * in the current browser and if the two dates are definitively not the\n   * same date in the session timezone. Anything short of this returns false.\n   * @param {!Date} d1\n   * @param {!Date} d2\n   * @return {boolean}\n   */\n  datesAreDifferentInTimezone(d1, d2) {\n    if (!this.dateTimeFormatter) {\n      return false;\n    } else {\n      return this.dateTimeFormatter.format(d1)\n          != this.dateTimeFormatter.format(d2);\n    }\n  }\n\n  /**\n   * Keeps track of when the previous hit was sent to determine if a session\n   * has expired. Also inspects the `sessionControl` field to handles\n   * expiration accordingly.\n   * @param {function(!Model)} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(!Model)}\n   */\n  sendHitTaskOverride(originalMethod) {\n    return (model) => {\n      originalMethod(model);\n\n      const sessionControl = model.get('sessionControl');\n      const sessionWillStart = sessionControl == 'start' || this.isExpired();\n      const sessionWillEnd = sessionControl == 'end';\n\n      /** @type {SessionStoreData} */\n      const sessionData = this.store.get();\n      sessionData.hitTime = now();\n      if (sessionWillStart) {\n        sessionData.isExpired = false;\n        sessionData.id = uuid();\n      }\n      if (sessionWillEnd) {\n        sessionData.isExpired = true;\n      }\n      this.store.set(sessionData);\n    };\n  }\n\n  /**\n   * Restores the tracker's original `sendHitTask` to the state before\n   * session control was initialized and removes this instance from the global\n   * store.\n   */\n  destroy() {\n    MethodChain.remove(this.tracker, 'sendHitTask', this.sendHitTaskOverride);\n    this.store.destroy();\n    delete instances[this.tracker.get('trackingId')];\n  }\n}\n\n\nSession.DEFAULT_TIMEOUT = 30; // minutes\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj} from '../utilities';\n\n\n/**\n * Class for the `urlChangeTracker` analytics.js plugin.\n * @implements {UrlChangeTrackerPublicInterface}\n */\nclass UrlChangeTracker {\n  /**\n   * Adds handler for the history API methods\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.URL_CHANGE_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!history.pushState || !window.addEventListener) return;\n\n    /** @type {UrlChangeTrackerOpts} */\n    const defaultOpts = {\n      shouldTrackUrlChange: this.shouldTrackUrlChange,\n      trackReplaceState: false,\n      fieldsObj: {},\n      hitFilter: null,\n    };\n\n    this.opts = /** @type {UrlChangeTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Sets the initial page field.\n    // Don't set this on the tracker yet so campaign data can be retreived\n    // from the location field.\n    this.path = getPath();\n\n    // Binds methods.\n    this.pushStateOverride = this.pushStateOverride.bind(this);\n    this.replaceStateOverride = this.replaceStateOverride.bind(this);\n    this.handlePopState = this.handlePopState.bind(this);\n\n    // Watches for history changes.\n    MethodChain.add(history, 'pushState', this.pushStateOverride);\n    MethodChain.add(history, 'replaceState', this.replaceStateOverride);\n    window.addEventListener('popstate', this.handlePopState);\n  }\n\n  /**\n   * Handles invocations of the native `history.pushState` and calls\n   * `handleUrlChange()` indicating that the history updated.\n   * @param {!Function} originalMethod A reference to the overridden method.\n   * @return {!Function}\n   */\n  pushStateOverride(originalMethod) {\n    return (...args) => {\n      originalMethod(...args);\n      this.handleUrlChange(true);\n    };\n  }\n\n  /**\n   * Handles invocations of the native `history.replaceState` and calls\n   * `handleUrlChange()` indicating that history was replaced.\n   * @param {!Function} originalMethod A reference to the overridden method.\n   * @return {!Function}\n   */\n  replaceStateOverride(originalMethod) {\n    return (...args) => {\n      originalMethod(...args);\n      this.handleUrlChange(false);\n    };\n  }\n\n  /**\n   * Handles responding to the popstate event and calls\n   * `handleUrlChange()` indicating that history was updated.\n   */\n  handlePopState() {\n    this.handleUrlChange(true);\n  }\n\n  /**\n   * Updates the page and title fields on the tracker and sends a pageview\n   * if a new history entry was created.\n   * @param {boolean} historyDidUpdate True if the history was changed via\n   *     `pushState()` or the `popstate` event. False if the history was just\n   *     modified via `replaceState()`.\n   */\n  handleUrlChange(historyDidUpdate) {\n    // Calls the update logic asychronously to help ensure that app logic\n    // responding to the URL change happens prior to this.\n    setTimeout(() => {\n      const oldPath = this.path;\n      const newPath = getPath();\n\n      if (oldPath != newPath &&\n          this.opts.shouldTrackUrlChange.call(this, newPath, oldPath)) {\n        this.path = newPath;\n        this.tracker.set({\n          page: newPath,\n          title: document.title,\n        });\n\n        if (historyDidUpdate || this.opts.trackReplaceState) {\n          /** @type {FieldsObj} */\n          const defaultFields = {transport: 'beacon'};\n          this.tracker.send('pageview', createFieldsObj(defaultFields,\n              this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit with the new page\n   * data. This default implementation can be overrided in the config options.\n   * @param {string} newPath The path after the URL change.\n   * @param {string} oldPath The path prior to the URL change.\n   * @return {boolean} Whether or not the URL change should be tracked.\n   */\n  shouldTrackUrlChange(newPath, oldPath) {\n    return !!(newPath && oldPath);\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    MethodChain.remove(history, 'pushState', this.pushStateOverride);\n    MethodChain.remove(history, 'replaceState', this.replaceStateOverride);\n    window.removeEventListener('popstate', this.handlePopState);\n  }\n}\n\n\nprovide('urlChangeTracker', UrlChangeTracker);\n\n\n/**\n * @return {string} The path value of the current URL.\n */\nfunction getPath() {\n  return location.pathname + location.search;\n}\n"]}